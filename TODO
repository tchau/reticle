============================================================
TODO
============================================================


9
  fix the fuckin BODY parsing... fuckkkk

  Also: TRY OUT using the EACH on country select options! SUPER COOL!
    EACH is broken on ARRAYS... can't do the country OPTS fuckkkkk!!!
10
  clean up the starting data, make it look good
11
  prep demo info (json and country json etc)
12
  slides
  feature checklist to demo: 
      Navigation scheme 
        - Rather than your keystrokes moving a cursor amongst text characters, your keystrokes directly manipulate the Elements)
      Appending nodes
        - it's all laid out in front of you.
      Fuzzy autocomplete, 
      Live updating as you do it,
        - You see what may emerge by hovering, you don't have to imagine it in your head 
      - Editor, (DEMO USING TEXTAREA)
        add a class
      - Editor value assists,  (DEMO USING THE INPUT)
      
      - create IMG tag
      the context-sensitive menus
        create a SELECT with OPTIONS 

      finally, the whiz-banger: Handlebars
      "Nobody wants a static web page. Everything is generative today and backed by data."

      Use handlebars WITH statement to scope into Item.
        Create a section with Title and Blog Post Body
        Use blog post Image
        include author

      show off iteration with EACH
        paste the COUNTRIES_JSON into data
        iterate a SELECT OPTIOn





  - CSS ok, fake it:
       just load up some fake css rules and make it LOOK like we have an inventory ofthem
    - really basic CSS/LESS editor
      - ooohhh. can we make it AWARE of the current nesting of HTML els classes and nodes? e.g. .intro [p, h2, .myclass]
    - once the LESS structure exists we can query it for "classes possibly relevant to me"
    - show up context menu (as you type) of what the attrs are for those ...

  ***
   Mouse nav: we need to LOCK the curr when we enter a menu.... else it gets all fucked
  ***


IMPORTING
  - use code mirror or something, just paste in some code
  - same for export

PRIMARY EDITING

- EDIT ATTRS
    - Explanations -- info panel tells you what the attrs mean
		- Context-smart value assist (form_id, element_id, class) showing the valid values [partially completed]
		- data helpers: if you want to insert substitutions like {{item.id}}

APPEND MENU
  - Info Panel explaining all the ELs (attrs and tags and such)

STYLE FINDER
  - knows all the CSS classes we have
  - let us pick one out -- automagically updating the preview as you mouse over the choices!

META
  try fixing the busted appearanceof the block els
  custom renders for certain tags


NAVIGATION
  - reconsider the current scope in/out scheme... perhaps a pure flat scheme makes sense? 
   - reconsider the modulus navigation (its kinda disorienting)


TEMPLATING (json-t)
  - JSON insert and then, render navigator view
  - create template variable
  - create template block **** HOW?? arghhh :(
  - data helper (navigate the JSON structure)


HELP
  - controls help at bottom of sceren
  - live preview on right


EFFECTS
  can visuals bemade morre subtle?
    no borders
    show the meta info when needed - some attrs (that matter for navigation) are always present; others show only when you get near them

  - menu positioning is fucked up
  - floaty checkmark when you've committed
  - floaty x when you've cancelled
  - reticle has commands ON it [add insert edit]. the available comands are also context sensitive
  consider whether all the tags and data need to be shown on meta-layer...
  maybe only show one layer deep?
  also reconsider the appearance of the bottom level inline elements (A, SPAN) and whether they nede all that....

EXPORT
- code generate (export)


CSS
- CSS context; given the classes here which rules are applied with the stylesheets we have?
- CSS Search: quickly pull up style editor for this node (shows rules that apply - pick one to edit -- boom, edit right there. no context switch.)

ADVANCED MANIPULATION
- copy / pasta
- undo / redo



============================================================
VISUALS
============================================================

- help icon in lower right



============================================================
DONE
============================================================

- appending new node after
- deletes
- insert inside
  - append after, inside [ok]
  - context-sensitive (what tags make sense inside this one)

- Categorize the tags

- INLINE EDIT
  A appends a text node after this element
  I inserts a text node inside this element
  ESC exits edit mode for that node, puts you back into NAV
  ENTER commits the node

- EDIT ATTRS
  - saves
  - shows all possible attributes for this elemenet, what they do
  - use defaultValues

LIVE PREVIEW
  - show the preview


APPEND MENU
  - create objects with interesting defaults
  - refresh the preview even AS you are cycling through POSSIBILITIES

- EDIT ATTRS
    - value helpers (url, img, number, on/off, form_id) showing the valid values
        what are the value "types"? 
            - text
            - pixels
            - URL
            - number
            - MIME_type
            - specific enum set [left / right/ top /middle /bottom]
                                [on / off]
            - specific [e.g. "checked", "required", "readonly"]
    - specific attrs [e.g. "checked", "required", "readonly", "selected"] are not yet well handled

- menu "blips" in on the right, and blips away when you commit or cancel

NAV HELP AT BOTTOM -- highlights when you enter the commands!
NAV HELP slide in

  // OK how to add a BLOCK EXPRESSION
      {{#each ITEMS }} {{/each}}
      {{#with ITEM  }} {{/with}}
  // OK how to insert PATHS
      {{name}}
      {{author.name}}
    paths can appear in 
  // data navigator -- clicking returns a path from CURRENT CONTEXT
  // designed to invoke the navigator given a context